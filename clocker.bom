# Copyright 2014-2015 by Cloudsoft Corporation Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

brooklyn.catalog:
  version: "1.3.0-REAPPT-1.4.6-SNAPSHOT" # CLOCKER_VERSION

  brooklyn.libraries:
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-extras&v=1.3.0-REAPPT-1.4.6-SNAPSHOT" # CLOCKER_VERSION
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-docker&v=1.3.0-REAPPT-1.4.6-SNAPSHOT" # CLOCKER_VERSION
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-mesos&v=1.3.0-REAPPT-1.4.6-SNAPSHOT" # CLOCKER_VERSION
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-dist&v=1.3.0-REAPPT-1.4.6-SNAPSHOT" # CLOCKER_VERSION
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.networking&a=brooklyn-networking-common&v=0.12.0-REAPPT-1.4.6" # ADVANCED_NETWORKING_VERSION
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.networking&a=brooklyn-networking-portforwarding&v=0.12.0-REAPPT-1.4.6" # ADVANCED_NETWORKING_VERSION
    - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.networking&a=brooklyn-networking-cloudstack&v=0.12.0-REAPPT-1.4.6" # ADVANCED_NETWORKING_VERSION
    - "http://ccweb.cloudsoftcorp.com/maven/libs-release-local/io/cloudsoft/jclouds/labs/docker/1.9.2-cloudsoft.20160630/docker-1.9.2-cloudsoft.20160630.jar"
    - "https://repository.apache.org/service/local/repositories/releases/content/org/apache/jclouds/api/cloudstack/2.0.2-REAPPT-1.4.5-SNAPSHOT/cloudstack-2.0.2-REAPPT-1.4.5-SNAPSHOT.jar" # JCLOUDS_VERSION
    - "https://oss.sonatype.org/content/repositories/releases/io/brooklyn/etcd/brooklyn-etcd/2.2.0/brooklyn-etcd-2.2.0.jar"

  include: https://raw.githubusercontent.com/brooklyncentral/brooklyn-etcd/v2.2.0/catalog.bom

  items:

  - id: docker-infrastructure
    name: "Docker Infrastructure"
    item:
      type: clocker.docker.entity.DockerInfrastructure
      brooklyn.config:
        docker.version: 1.10.3 # DOCKER_VERSION
        entity.dynamicLocation.name: "my-docker-cloud"
        docker.container.cluster.headroom.count: 4
        docker.policy.ha.enable: false
        docker.container.strategies:
        - $brooklyn:object:
            type: clocker.docker.location.strategy.MaxContainersPlacementStrategy
            brooklyn.config:
              maxContainers: 16
        - $brooklyn:object:
            type: clocker.docker.location.strategy.BreadthFirstPlacementStrategy
        docker.host.spec:
          $brooklyn:entitySpec:
            type: docker-host

  - id: docker-host
    name: "Docker Host"
    item:
      type: clocker.docker.entity.DockerHost
      brooklyn.config:
        docker.host.driver.storage: overlay
        docker.container.spec:
          $brooklyn:entitySpec:
            type: docker-container
        docker.host.flags:
          minRam: 7g
          minCores: 2
          stopIptables: true
        start.timeout: 5m

  - id: docker-container
    name: "Docker Container"
    item:
      type: clocker.docker.entity.container.DockerContainer

  - id: calico-network
    name: "Calico Network"
    item:
      type: clocker.docker.networking.entity.sdn.calico.CalicoNetwork
      brooklyn.config:
        calico.version: 0.19.0
        sdn.agent.spec:
          $brooklyn:entitySpec:
            type: calico-node

  - id: calico-node
    name: "Calico Node"
    item:
      type: clocker.docker.networking.entity.sdn.calico.CalicoNode

  - id: calico-module
    name: "Calico Network Module"
    item:
      type: clocker.mesos.networking.entity.sdn.calico.CalicoModule
      brooklyn.config:
        calico.version: 0.8.0

  - id: weave-network
    name: "Weave Network"
    item:
      type: clocker.docker.networking.entity.sdn.weave.WeaveNetwork
      brooklyn.config:
        weave.version: 1.5.0
        sdn.agent.spec:
          $brooklyn:entitySpec:
            type: weave-router

  - id: weave-router
    name: "Weave Router"
    item:
      type: clocker.docker.networking.entity.sdn.weave.WeaveRouter

  - id: overlay-network
    name: "Docker Overlay Network"
    item:
      type: clocker.docker.networking.entity.sdn.overlay.OverlayNetwork
      brooklyn.config:
        sdn.agent.spec:
          $brooklyn:entitySpec:
            type: overlay-plugin

  - id: overlay-plugin
    name: "Docker Overlay Plugin"
    item:
      type: clocker.docker.networking.entity.sdn.overlay.OverlayPlugin

  - id: docker-registry
    name: "Docker Registry"
    services:
    - type: clocker.docker.entity.container.registry.DockerRegistry
      brooklyn.config:
        docker.registry.port: 5000

  - id: mesos-cluster
    name: "Mesos Cluster"
    item:
      type: clocker.mesos.entity.MesosCluster
      brooklyn.config:
        entity.dynamicLocation.name: "my-mesos-cluster"

  - id: marathon-framework
    name: "Marathon Framework"
    item:
      type: clocker.mesos.entity.framework.marathon.MarathonFramework

  - id: docker-cloud-single
    name: "Clocker"
    description: |
      Single Docker host without networking
    iconUrl: classpath://docker-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          docker.host.cluster.initial.size: 1
          docker.container.cluster.headroom.count: 0
          docker.container.strategies:
          - $brooklyn:object:
              type: clocker.docker.location.strategy.MaxContainersPlacementStrategy
              brooklyn.config:
                maxContainers: 32
          - $brooklyn:object:
              type: clocker.docker.location.strategy.DepthFirstPlacementStrategy
          sdn.enable: false

  - id: docker-cloud-calico
    name: "Clocker with Calico"
    description: |
      Docker Cloud infrastructure with Calico networking
    iconUrl: classpath://calico-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          sdn.enable: true
          sdn.provider.spec:
            $brooklyn:entitySpec:
              type: calico-network
              brooklyn.config:
                sdn.network.cidr: 50.0.0.0/16
                sdn.network.size: 24

  - id: docker-cloud-weave
    name: "Clocker with Weave"
    description: |
      Docker Cloud infrastructure with Weave networking
    iconUrl: classpath://weaveworks-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          sdn.enable: true
          sdn.provider.spec:
            $brooklyn:entitySpec:
              type: weave-network

  - id: docker-cloud-overlay
    name: "Clocker with Docker Overlay"
    description: |
      Docker Cloud infrastructure with Docker overlay networking
    iconUrl: classpath://docker-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          sdn.enable: true
          sdn.provider.spec:
            $brooklyn:entitySpec:
              type: overlay-network

  - id: external-mesos-cluster
    name: "External Mesos Cluster"
    description: |
      Access a running Mesos cluster
    iconUrl: classpath://mesos-logo.png
    itemType: template
    item:
      services:
      - type: mesos-cluster
        brooklyn.config:
          mesos.url: "http://localhost:5050/"

  - id: haproxy-controller
    name: "HAProxy"
    description: |
      HAProxy load balancer entity.
    item:
      type: org.apache.brooklyn.entity.proxy.haproxy.HAProxyController
      brooklyn.config:
        docker.image.name: haproxy
        docker.useSsh: false
        docker.image.commands:
        - "/bin/bash"
        docker.container.interactive: true
        docker.container.openPorts.configKeys:
        - $brooklyn:sensor("org.apache.brooklyn.entity.proxy.AbstractController", "proxy.http.port")
        - $brooklyn:sensor("org.apache.brooklyn.entity.proxy.AbstractController", "proxy.https.port")
        install.dir: /usr/local/sbin/
        run.dir: /usr/local/etc/haproxy/
        member.sensor.hostname: "host.subnet.hostname"
        provisioning.properties:
          entity.dynamicLocation.flags:
            user: root

# vim:ts=2:sw=2:ft=yaml:
